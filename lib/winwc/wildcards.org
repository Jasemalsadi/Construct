* Matching Windows Wildcard Behaviour

Matching wildcards in Windows is messy.  This document outlines the
design for how we mimic Windows' wildcarding behaviour.

For sanity, all of the input data used to compile this document is
supported in evidence collected from running ~FindFirstFile~ on a
Windows host.

Finally, ~FindFirstFile~ performs normalisation before wildcard
translation rules are applied, unless the path begins ~\\?\~, which is
Windows' method of saying "do not normalise this path".  See the
[[Wildcard Normalisation Rules]] below for translations.


** Match Symbols

  | Character | Name     |
  |-----------+----------|
  | *         | ASTERISK |
  | ?         | QMARK    |
  | <         | DOS_STAR |
  | >         | DOS_QM   |
  | "         | DOS_DOT  |

Match symbols <, >, and " use "MS DOS semantics", meaning the filename
is treated as if it were in DOS' 8.3 format.  This is explained in
excellent detail in this [[https://blogs.msdn.microsoft.com/oldnewthing/20071217-00/?p=24143/][blog post]].

** References

https://web.archive.org/web/20150221153346/http://support.microsoft.com:80/kb/142982/en-us
https://blogs.msdn.microsoft.com/oldnewthing/20050720-16/?p=34883
https://en.wikipedia.org/wiki/8.3_filename
https://web.archive.org/web/20150610125659/https://usn.pw/blog/gen/2015/06/09/filenames/


In case you aren’t aware of how 8.3 file names work, here’s a quick run-down.

All periods other than the one separating the filename from the
extension are dropped - a.testing.file.bat turns into
atestingfile.bat.

Certain special characters like + are turned into underscores, and
    others are dropped. The file name is upper-cased. 1+2+3 Hello
    World.exe turns into 1_2_3HELLOWORLD.EXE.  The file extension is
    truncated to 3 characters, and (if longer than 8 characters) the
    file name is truncated to 6 characters followed by
    ~1. SomeStuff.aspx turns into SOMEST~1.ASP.  If these would cause
    a collision, ~2 is used instead, followed by ~3 and ~4.  Instead
    of going to ~5, the file name is truncated down to 2 characters,
    with the replaced replaced by a hexadecimal checksum of the long
    filename - SomeStuff.aspx turns into SOBC84~1.ASP, where BC84 is
    the result of the (previously-)undocumented checksum function.
